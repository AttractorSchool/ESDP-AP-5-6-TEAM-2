version: '3'

services:
  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 300 gservicegroup celery

  web:
    container_name: gservicegroup
    restart: always
    volumes:
      - static_volume:/app/static
    env_file:
      - .env_prod
    image: esdp2/gservicegroup:latest
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    networks:
      - djangonetwork

  postgres:
    container_name: postgres
    image: postgres:latest
    restart: always
    ports:
      - "5435:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
    env_file:
      - .env_prod
    environment:
      - POSTGRES_DB=${PSQL_NAME}
      - POSTGRES_USER=${PSQL_USER}
      - POSTGRES_PASSWORD=${PSQL_PASS}
    networks:
      - djangonetwork

  redis:
    container_name: redis
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis:/data

  celery:
    container_name: celery
    image: esdp2/celery:latest
    restart: always
    volumes:
      - .:/app
    env_file:
      - .env_prod
    links:
      - redis
    depends_on:
      - redis
      - web

  nginx:
    build: ./nginx
    image: nginx:latest
    restart: always
    container_name: nginx
    volumes:
      - static_volume:/app/static
    ports:
      - "8084:80"
    depends_on:
      - web

volumes:
  postgres:
  redis:
  static_volume:
  watchtower:

networks:
  djangonetwork:
    driver: bridge